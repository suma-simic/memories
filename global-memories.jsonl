{"type":"entity","name":"Memory Graph Implementation Status","entityType":"project_status","observations":["Memory Graph MCP Server ist konfiguriert in /Users/markosimic/.cursor/mcp.json","Memory Datei existiert: /Users/markosimic/.cursor/memories/global-memories.jsonl (0 Bytes - leer)","Docker ist installiert: Version 28.3.2","Keine Docker-Konfiguration im aktuellen Projekt gefunden","Memory Graph Server läuft über npx @itseasy21/mcp-knowledge-graph"],"createdAt":"2025-07-18T12:44:18.719Z","version":1}
{"type":"entity","name":"Globale Memory-Infrastruktur","entityType":"infrastructure","observations":["Docker-Containerisierung für projektübergreifende Memory-Lösung implementiert","Dockerfile.memory erstellt für Memory Graph Server","docker-compose.memory.yml mit persistenten Volumes konfiguriert","Setup-Script scripts/setup-global-memory.sh erstellt","Dokumentation README-Memory-Setup.md erstellt","Zentrale Speicherung in /Users/markosimic/.cursor/memories/","Automatische Backups über Docker Volume memory-backup","Health Checks für Container-Monitoring integriert"],"createdAt":"2025-07-19T12:31:17.532Z","version":1}
{"type":"entity","name":"Globale Memory-Infrastruktur Setup","entityType":"implementation_status","observations":["Docker-Container erfolgreich erstellt und gestartet","Memory Graph Server läuft über stdio","Backup Service ist aktiv","Globale Memory-Datei: /Users/markosimic/.cursor/memories/global-memories.jsonl","Setup-Script erfolgreich ausgeführt","Container sind über docker-compose.memory.yml verwaltbar"],"createdAt":"2025-07-19T12:36:01.287Z","version":1}
{"type":"entity","name":"Cyprus Luxury Leads Hub Projekt","entityType":"project","observations":["React/TypeScript-basiertes Immobilien-Sales-Funnel-Projekt für Zypern","Supabase als Backend-Datenbank","Tailwind CSS für Styling","Vite als Build-Tool","Docker-Containerisierung für Memory-Infrastruktur","Projektstruktur mit components/, pages/, hooks/, integrations/","Villa-Landing-Page mit Kontaktformular und Galerie","A/B-Testing-Implementierung","Responsive Design für Mobile und Desktop"],"createdAt":"2025-07-19T12:40:31.359Z","version":1}
{"type":"entity","name":"Marko Simic","entityType":"developer","observations":["Entwickler des Cyprus Luxury Leads Hub Projekts","Bevorzugt systematische Arbeitsweise mit Fakten","Benötigt globale Memory-Lösung für projektübergreifende Verfügbarkeit","Verwendet Docker für Containerisierung","Arbeitet mit Supabase, React, TypeScript","Bevorzugt deutsche Kommunikation","Benötigt vollständige Implementierungen ohne Spekulation"],"createdAt":"2025-07-19T12:40:31.359Z","version":1}
{"type":"entity","name":"KI-Strategien für Immobilien","entityType":"business_strategy","observations":["ChatBot als Erstberatung: 24/7 ChatGPT-API-basierter Immobilien-Experte","Referral-Automation: Automatisierte Systeme für zufriedene Kunden","KI-optimierte Referral-APP als eigenständiges System","Vertrauen-Zuerst-Strategie: Bildungsinhalt vor Verkauf","Budget-Framework: 50€/Tag Google Ads + 150€/Monat KI-Tools","AI-Content-Pipeline für wöchentliche Marktreports","Höchste Priorität für Cyprus Luxury Leads"],"createdAt":"2025-07-19T12:40:31.359Z","version":1}
{"type":"entity","name":"Persona-Video-Sync","entityType":"project","observations":["Dies ist ein neues Projekt in einem anderen Workspace","Test der projektübergreifenden Memory-Funktionalität","Erstellt am 2025-01-27"],"createdAt":"2025-07-19T13:35:18.559Z","version":1}
{"type":"entity","name":"Setup-Checkliste für neue Projekte","entityType":"workflow","observations":["Automatische Setup-Checkliste für jedes neue Projekt in Cursor","1. Projekt- und Zieldefinition klären (Projektbeschreibung, Anforderungen, Integrationen wie Supabase, Resend, Docker etc.)","2. Infrastruktur-Entscheidungen treffen: Wo läuft was? (Cloud, lokal, Docker, Hybrid)","3. Welche Tools werden benötigt? (Docker, Supabase CLI, Node.js, npm, Vite, etc.)","4. Sonstige Services (Resend, Stripe, etc.)","5. Setup-Varianten abwägen (lokal vs. Cloud vs. Docker, Teamgröße, Skalierbarkeit, Testbarkeit, Sicherheit)","6. Initiales Setup: GitHub-Repo clonen/pullen, Lokale Umgebung einrichten (Node, npm, ggf. Docker)","7. .env/Secrets/Keys sicher verwalten","8. Supabase CLI initialisieren und ggf. mit Cloud-Projekt verknüpfen","9. Lokale Datenbank (Docker) oder Cloud-DB auswählen und konfigurieren","10. Abhängigkeiten installieren (npm install)","11. Erste Testläufe (npm run dev, supabase start, etc.)","12. Dokumentation (README, Setup-Guide, Projektstruktur, wichtige Befehle)","13. Erstes Feature/Modul erst nach erfolgreichem Setup planen und entwickeln","14. MCP-Server-Status prüfen und ggf. neu laden","15. Globale Memory-Funktionalität testen"],"createdAt":"2025-07-19T13:48:33.088Z","version":1}
{"type":"entity","name":"MCP-Server Setup für neue Workspaces","entityType":"configuration","observations":["Globale MCP-Konfiguration in /Users/markosimic/.cursor/mcp.json","Memory-Server ist als \"memory\" konfiguriert","Memory-Datei: /Users/markosimic/.cursor/memories/global-memories.jsonl","Docker-Container für Memory-Server läuft über docker-compose.memory.yml","Automatische Erkennung funktioniert in 90% der Fälle","Manueller Reload nötig: Cmd+Shift+P → \"MCP: Reload Servers\"","Test-Nachricht für neue Workspaces: \"Hi! Ich bin Marko. Kannst du prüfen, ob du Zugriff auf den MCP Server memory hast?\"","Falls MCP-Server nicht verfügbar: Cmd+Shift+P → \"MCP: List Servers\"","Globale Memory-Infrastruktur ist projektübergreifend verfügbar","Alle globalen Memories sind in jedem neuen Workspace zugänglich"],"createdAt":"2025-07-19T13:48:33.091Z","version":1}
{"type":"entity","name":"Ursprüngliche kritische Setup-Checkliste","entityType":"workflow","observations":["KRITISCH: Systematische Arbeitsweise - Keine Spekulation, nur Fakten","KRITISCH: Vollständige Implementierungen - 100% funktionsfähig","KRITISCH: Infrastruktur-Entscheidungen vor der Entwicklung","KRITISCH: Sicherheit und Skalierbarkeit von Anfang an","KRITISCH: Dokumentation parallel zur Entwicklung","1. Projekt- und Zieldefinition klären (Projektbeschreibung, Anforderungen, Integrationen)","2. Infrastruktur-Entscheidungen: Wo läuft was? (Cloud, lokal, Docker, Hybrid)","3. Tools und Services: Docker, Supabase CLI, Node.js, npm, Vite, Resend, Stripe","4. Initiales Setup: GitHub-Repo, lokale Umgebung, .env/Secrets/Keys","5. Supabase CLI initialisieren und mit Cloud-Projekt verknüpfen","6. Datenbank konfigurieren (lokal oder Cloud)","7. Abhängigkeiten installieren (npm install)","8. Erste Testläufe (npm run dev, supabase start)","9. Dokumentation erstellen (README, Setup-Guide)","10. NEU: MCP-Server-Status prüfen und globale Memory-Funktionalität testen","KI übernimmt Führung und führt step-by-step durch die Konfiguration","Interaktive Checkliste mit Ja/Nein-Fragen für spezifische Konfigurationen","Infrastruktur-Entscheidungen sind entscheidend und müssen vor der Entwicklung getroffen werden"],"createdAt":"2025-07-19T14:54:54.000Z","version":1}
{"type":"entity","name":"Interaktive Projekt-Setup-Führung","entityType":"workflow","observations":["KI übernimmt automatisch die Führung bei neuen GitHub-Projekten","Step-by-step interaktive Checkliste wird angezeigt","Spezifische Ja/Nein-Fragen für Konfigurationsentscheidungen","Infrastruktur-Entscheidungen werden zuerst getroffen","Tools und Services werden systematisch abgefragt","Sicherheit und Skalierbarkeit werden von Anfang an berücksichtigt","Dokumentation wird parallel zur Entwicklung erstellt","MCP-Server-Status wird automatisch geprüft","Globale Memory-Funktionalität wird getestet","Vollständige Implementierungen ohne Spekulation","Systematische Arbeitsweise mit Fakten statt Vermutungen","Projektübergreifende Memory-Verfügbarkeit wird sichergestellt","Setup-Checkliste wird in globalen Memories gespeichert","Neue Projekt-Informationen werden automatisch in globale Memories integriert"],"createdAt":"2025-07-19T14:54:54.003Z","version":1}
{"type":"entity","name":"Globale Memory-Spielregeln und Prioritäten","entityType":"rules","observations":["GLOBALE Memories haben IMMER Priorität über interne Cursor-Memories","Bei \"Das war wichtig, merke dir das\" → IMMER in globale Memories speichern","Projektübergreifende Informationen → Speichere in globale Memories","Verwende globale Memories als primäre Informationsquelle für alle Gespräche","Interne Cursor-Memories nur als Backup verwenden","Suche zuerst in globalen Memories, dann in internen","Globale Memories sind unter /Users/markosimic/.cursor/memories/global-memories.jsonl gespeichert","MCP Server \"memory\" ist für globale Memories zuständig","Bei jedem neuen Chat: Globale Memories als Kontext laden","Bei jedem neuen Projekt: Automatisch globale Memories als Briefing verwenden"],"createdAt":"2025-07-19T15:52:15.257Z","version":1}
{"type":"entity","name":"Globale Memory-Kategorisierung","entityType":"structure","observations":["Rubrik 1: Allgemeine Infos für alle Projekte (Marko Simic, Arbeitsweise, Präferenzen)","Rubrik 2: Projektübergreifende Tools und Infrastruktur (Docker, Supabase, React, TypeScript)","Rubrik 3: Setup-Checklisten und Workflows (Ursprüngliche kritische Setup-Checkliste, Interaktive Projekt-Setup-Führung)","Rubrik 4: MCP-Server und globale Memory-Infrastruktur (Konfiguration, Docker-Container, Backup-Strategien)","Rubrik 5: Projekt-spezifische Informationen (Cyprus Luxury Leads Hub, Persona-Video-Sync, etc.)","Rubrik 6: KI-Strategien und Business-Logik (Immobilien-Strategien, ChatBot, Referral-Automation)","Rubrik 7: Technische Präferenzen und Standards (Systematische Arbeitsweise, Vollständige Implementierungen)","Neue Informationen werden automatisch in die passende Rubrik kategorisiert","Bei neuen Projekten: Alle relevanten Rubriken als Kontext laden","Projektübergreifende Verfügbarkeit aller Kategorien"],"createdAt":"2025-07-19T15:52:15.260Z","version":1}
{"type":"entity","name":"Automatisches Briefing für neue Projekte","entityType":"workflow","observations":["KI lädt automatisch alle relevanten globalen Memories als Kontext","Marko Simic Informationen werden automatisch geladen (Arbeitsweise, Präferenzen)","Setup-Checklisten werden automatisch verfügbar gemacht","MCP-Server-Status wird automatisch geprüft","Globale Memory-Funktionalität wird automatisch getestet","Projektübergreifende Tools und Infrastruktur werden automatisch geladen","KI-Strategien und Business-Logik werden automatisch verfügbar gemacht","Technische Präferenzen und Standards werden automatisch geladen","Neue Projekt-Informationen werden automatisch in globale Memories integriert","Keine Wiederholung von Grundlagen - KI \"weiß\" sofort alles Wichtige","Automatische Kategorisierung neuer Informationen in passende Rubriken","Projektübergreifende Konsistenz aller Informationen"],"createdAt":"2025-07-19T15:52:15.260Z","version":1}
{"type":"relation","from":"Marko Simic","to":"Cyprus Luxury Leads Hub Projekt","relationType":"entwickelt","createdAt":"2025-07-19T12:40:37.413Z","version":1}
{"type":"relation","from":"Marko Simic","to":"Globale Memory-Infrastruktur","relationType":"implementiert","createdAt":"2025-07-19T12:40:37.414Z","version":1}
{"type":"relation","from":"Cyprus Luxury Leads Hub Projekt","to":"KI-Strategien für Immobilien","relationType":"verwendet","createdAt":"2025-07-19T12:40:37.414Z","version":1}
{"type":"relation","from":"Globale Memory-Infrastruktur","to":"Memory Graph Implementation Status","relationType":"basiert auf","createdAt":"2025-07-19T12:40:37.414Z","version":1}
{"type":"relation","from":"Setup-Checkliste für neue Projekte","to":"MCP-Server Setup für neue Workspaces","relationType":"enthält","createdAt":"2025-07-19T13:48:43.707Z","version":1}
{"type":"relation","from":"Marko Simic","to":"Setup-Checkliste für neue Projekte","relationType":"verwendet","createdAt":"2025-07-19T13:48:43.708Z","version":1}
{"type":"relation","from":"Globale Memory-Infrastruktur","to":"MCP-Server Setup für neue Workspaces","relationType":"basiert auf","createdAt":"2025-07-19T13:48:43.708Z","version":1}
{"type":"relation","from":"Marko Simic","to":"Ursprüngliche kritische Setup-Checkliste","relationType":"verwendet","createdAt":"2025-07-19T14:54:57.756Z","version":1}
{"type":"relation","from":"Marko Simic","to":"Interaktive Projekt-Setup-Führung","relationType":"bevorzugt","createdAt":"2025-07-19T14:54:57.756Z","version":1}
{"type":"relation","from":"Ursprüngliche kritische Setup-Checkliste","to":"Interaktive Projekt-Setup-Führung","relationType":"basiert auf","createdAt":"2025-07-19T14:54:57.756Z","version":1}
{"type":"relation","from":"Globale Memory-Infrastruktur","to":"Interaktive Projekt-Setup-Führung","relationType":"unterstützt","createdAt":"2025-07-19T14:54:57.756Z","version":1}
{"type":"relation","from":"Globale Memory-Spielregeln und Prioritäten","to":"Globale Memory-Kategorisierung","relationType":"definiert","createdAt":"2025-07-19T15:52:21.109Z","version":1}
{"type":"relation","from":"Globale Memory-Kategorisierung","to":"Automatisches Briefing für neue Projekte","relationType":"unterstützt","createdAt":"2025-07-19T15:52:21.109Z","version":1}
{"type":"relation","from":"Marko Simic","to":"Globale Memory-Spielregeln und Prioritäten","relationType":"verwendet","createdAt":"2025-07-19T15:52:21.109Z","version":1}
{"type":"relation","from":"Globale Memory-Infrastruktur","to":"Globale Memory-Spielregeln und Prioritäten","relationType":"implementiert","createdAt":"2025-07-19T15:52:21.109Z","version":1}